- const numFormat = new Intl.NumberFormat('en-US', {maximumFractionDigits: 2});
- const currencyFormat = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });
- const hasImg = data.lon ? true : false;
- const friendlyDate = (d) => new Date(d).toLocaleString('en-US', {timeZone:'UTC', hour12:true, year: 'numeric', day: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', timeZoneName: 'short'});
- const mapData = Object.assign({}, {cities: data.cities ? data.cities.all : []}, data.mapData || {});
doctype html
html.update
    head
        meta(charset="UTF-8")
        link(rel="stylesheet",href="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.2.0/css/ol.css",integrity="sha384-C7SzZySesoxngSK5V0BaD1DUap0LPZGWZpnXQGoIwvBXFc8G21y4s1QYvyr84FNa",crossorigin="anonymous")

        script(src='https://code.jquery.com/jquery-3.3.1.min.js',
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=",crossorigin="anonymous")
        script(src="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.2.0/build/ol.js",                integrity="sha384-yaIgZleEnDCw26CwitrCKE9Jl4wLWEBw7moR6IF7CXoeMpRVWmOc0NDk222RUhBU",                crossorigin="anonymous")

        script
            include ../node_modules/ol-helpers/index.js
        script
            include ../client/renderMap.js
        style
            include style.css
    body
        div.content
            div.banner
                div.title
                    h1
                        span #{data.current.Fire_Name} Fire

            table.wrapper
                tr
                    if hasImg
                        td(width='30%')
                            div#map(class='map', width='600', height='600')
                    td(width=hasImg?'70%':'100%')
                        table.data
                            if (data.current.NFSAType || '').includes('Emerging')
                                tr.important
                                    td(colspan=2)
                                        div.warn
                                            | THIS IS AN EMERGING FIRE REPORT
                                            br
                                            | DETAILS MAY BE ESPECIALLY UNCERTAIN
                            tr.important
                                th(width='38%')
                                    if data.current.PercentContained || 0 == data.current.PercentContained
                                        span.current #{numFormat.format(data.current.PercentContained)}%
                                    else
                                        span.current Unknown %
                                td(width='62%')
                                    | Contained*
                                    if !data.isNew && 'PercentContained' in data.diff
                                        span.previous
                                            if data.current.PercentContained > data.last.PercentContained
                                                span.deltaUp ▲
                                            else
                                                span.deltaDown ▼
                                            | from #{numFormat.format(data.last.PercentContained)}%
                            tr.important
                                th
                                    if data.current.DailyAcres || 0 == data.current.DailyAcres
                                        span.current #{numFormat.format(data.current.DailyAcres)}
                                    else
                                        span.current Unknown
                                td
                                    | Acres
                                    if !data.isNew && 'DailyAcres' in data.diff
                                        span.previous
                                            if data.current.DailyAcres > data.last.DailyAcres
                                                span.deltaUp ▲
                                            else
                                                span.deltaDown ▼
                                            | from #{numFormat.format(data.last.DailyAcres)}
                            if data.current.TotalIncidentPersonnel
                                tr.important
                                    th 
                                        span.current #{numFormat.format(data.current.TotalIncidentPersonnel)}
                                    td
                                        | Personnel
                                        if !data.isNew && 'TotalIncidentPersonnel' in data.diff && data.last.TotalIncidentPersonnel
                                            span.previous
                                                if data.current.TotalIncidentPersonnel > data.last.TotalIncidentPersonnel
                                                    span.deltaUp ▲
                                                else
                                                    span.deltaDown ▼
                                                | from #{numFormat.format(data.last.TotalIncidentPersonnel)}
                            if data.current.EstimatedCostToDate
                                tr.important
                                    th 
                                        span.current #{currencyFormat.format(data.current.EstimatedCostToDate)}
                                    td
                                        | Est. Cost
                                        if !data.isNew && 'EstimatedCostToDate' in data.diff && data.last.EstimatedCostToDate
                                            span.previous
                                                if data.current.EstimatedCostToDate > data.last.EstimatedCostToDate
                                                    span.deltaUp ▲
                                                else
                                                    span.deltaDown ▼
                                                | from #{currencyFormat.format(data.last.EstimatedCostToDate)}

                            tr
                                td.details(colspan=2)
                                    div.detailsRow
                                        if data.cities && (data.cities.closest || data.cities.biggest)
                                            if data.cities.closest
                                                span.detail #{data.cities.closest.directions}
                                                br
                                            if data.cities.biggest
                                                span.detail #{data.cities.biggest.directions}
                                                br
                                        span.detail #{data.current.FireCause} Cause 
                                        span.detail Discovered #{friendlyDate(data.current.FireDiscoveryDateTime)}
                                        br
                                        span.detail Summary Updated #{friendlyDate(data.current.ModifiedOnDateTime)}
                                        if !data.isNew && data.last.ModifiedOnDateTime && data.current.ModifiedOnDateTime != data.last.ModifiedOnDateTime
                                            br
                                            span.detail Last Update #{friendlyDate(data.last.ModifiedOnDateTime)}
                                        if data.current.PerimDateTime
                                            br
                                            span.detail Perimeter Updated #{friendlyDate(data.current.PerimDateTime)}
                                        br
                                        span.detail Fire Id #{data.current.UniqueFireIdentifier}

            div.warn
                | FOR INFORMATION ONLY — DO NOT USE FOR SAFETY/EMERGENCY/EVACUATION PURPOSES
                br
                | AUTOMATED FIRE INFO IS APPROXIMATE AND OFTEN INCORRECT AND OUT-OF-DATE
                br
                | UNOFFICIAL — USE AT YOUR OWN RISK — FIRES MAY BE CLOSER THAN THEY APPEAR

            div.cite
                b
                    | Consult local public officials for safety, emergency, and evacuation information.
                    | To the maximum extent permitted by law: (1) all content is provided to you on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER (INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDNTIONS OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NONINFRINGEMENT); and (2) IN NO EVENT WILL ANY AUTHOR OR DATA PROVIDER BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES arising out of your use of this content, even if the author or data provider has been advised of the possibility of such losses, costs, expenses, or damages.
                p
                    | Sources: National Fire Situational Awareness (#{config.sourceUrl});
                    | USGS GeoMAC (wildfire.cr.usgs.gov);
                    | USGS Gap Analysis Program (GAP), PADUS;
                    | USGS The National Map (Orthoimagery, National Boundaries Dataset, National Transportation Dataset);
                    | U.S. Census Bureau — TIGER/Line;
                    | U.S. Forest Service.
                    | *Containment may represent objective completion rather than perimeter containment.
                p
                    | Generated by twitter.com/@#{config.twitterName} using #{config.systemName}.
                    | No claim to original U.S. Government works.
                    | Not affiliated with or endorsed by any government agencies. EPSG:3857.
        script
            | showMap(#{data.lon}, #{data.lat}, #{data.zoom}, 'update', !{JSON.stringify(mapData)});
