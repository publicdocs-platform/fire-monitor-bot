- const numFormat = new Intl.NumberFormat('en-US', {maximumFractionDigits: 2});
- const currencyFormat = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 });
- const hasImg = data.lon ? true : false;
- const friendlyDate = (d) => new Date(d).toLocaleString('en-US', {timeZone:'UTC', hour12:true, year: 'numeric', day: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', timeZoneName: 'short'});
- const mapData = Object.assign({}, {cities: data.cities ? data.cities.all : []}, data.mapData || {});
doctype html
html.update
    head
        meta(charset="UTF-8")
        link(rel="stylesheet",href="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.2.0/css/ol.css",integrity="sha384-C7SzZySesoxngSK5V0BaD1DUap0LPZGWZpnXQGoIwvBXFc8G21y4s1QYvyr84FNa",crossorigin="anonymous")

        script(src='https://code.jquery.com/jquery-3.3.1.min.js',
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=",crossorigin="anonymous")
        script(src="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.2.0/build/ol.js",                integrity="sha384-yaIgZleEnDCw26CwitrCKE9Jl4wLWEBw7moR6IF7CXoeMpRVWmOc0NDk222RUhBU",                crossorigin="anonymous")

        script
            include ../node_modules/ol-helpers/index.js
        script
            include ../node_modules/qrcode/build/qrcode.min.js
        script
            include ../client/renderMap.js
        style
            include style.css
    body
        div.content
            div.banner
                div.title
                    h1
                        span #{data.current.Final_Fire_Name}
            div.warn.main-warn
                div.warn-icon
                    include ../imgs/warning.svg
                div.warn-content
                    | DO NOT USE FOR HEALTH, SAFETY, EMERGENCY, or EVACUATION PURPOSES. Consult local public officials instead.
                    br
                    | Info is APPROXIMATE, often INCORRECT and OUT-OF-DATE, NOT REAL-TIME, and NOT REVIEWED BY A HUMAN BEING.
                    br
                    | For information only. USE AT YOUR OWN RISK — DANGER MAY BE CLOSER AND LARGER THAN SHOWN HERE
            table.wrapper
                tr
                    if hasImg
                        td(width='30%')
                            div#map(class='map', width='600', height='600')
                    td(width=hasImg?'70%':'100%')
                        table.data
                            if (data.current.NFSAType || '').includes('Emerging')
                                tr.important
                                    td(colspan=2)
                                        div.warn
                                            | THIS IS AN EMERGING REPORT
                                            br
                                            | DETAILS MAY BE ESPECIALLY UNCERTAIN
                            tr.important
                                td(colspan=2)
                                    div.warn
                                        | UNOFFICIAL REPORT — Updated #{friendlyDate(data.current.ModifiedOnDateTime)}
                                        if data.current.PerimDateTime && (data.current.PerimDateTime > data.current.ModifiedOnDateTime)
                                            br
                                            span.detail-important (Perimeter info. is more recent than report)
                            tr
                                td(colspan=2)
                                    table.data2col
                                        if data.current.PercentContained || 0 === data.current.PercentContained
                                            tr.important
                                                th
                                                    span.current #{numFormat.format(data.current.PercentContained)}%
                                                td
                                                    | Contained*
                                                    if !data.isNew && 'PercentContained' in data.diff && (data.current.PercentContained - data.last.PercentContained > 0.5 || data.current.PercentContained - data.last.PercentContained < -0.5)
                                                        span.previous
                                                            if data.current.PercentContained > data.last.PercentContained
                                                                span.deltaUp ▲
                                                            else
                                                                span.deltaDown ▼
                                                            | from #{numFormat.format(data.last.PercentContained)}%
                                        - const usePerimAcres = data.current.PerimDateTime && (data.current.PerimDateTime > data.current.ModifiedOnDateTime) && data.current.PerimeterData.Acres && data.current.PerimeterData.Acres > (data.current.DailyAcres || 0);
                                        - const rawAcres = usePerimAcres ? data.current.PerimeterData.Acres : data.current.DailyAcres;
                                        if rawAcres && rawAcres > 0.1
                                            tr.important
                                                - const acres = rawAcres >= 100 ? Math.round(rawAcres) : rawAcres;
                                                th
                                                    span.current #{numFormat.format(acres)}
                                                td
                                                    | Acres
                                                    if usePerimAcres
                                                        span.previous (by perimeter)
                                                    if !data.isNew && (acres - data.last.DailyAcres > 0.5 || acres - data.last.DailyAcres < -0.5)
                                                        span.previous
                                                            if acres > data.last.DailyAcres
                                                                span.deltaUp ▲
                                                            else
                                                                span.deltaDown ▼
                                                            | from #{numFormat.format(data.last.DailyAcres)}
                                        if data.current.TotalIncidentPersonnel
                                            tr.important
                                                th 
                                                    span.current #{numFormat.format(data.current.TotalIncidentPersonnel)}
                                                td
                                                    | Personnel
                                                    if !data.isNew && 'TotalIncidentPersonnel' in data.diff && data.last.TotalIncidentPersonnel
                                                        span.previous
                                                            if data.current.TotalIncidentPersonnel > data.last.TotalIncidentPersonnel
                                                                span.deltaUp ▲
                                                            else
                                                                span.deltaDown ▼
                                                            | from #{numFormat.format(data.last.TotalIncidentPersonnel)}
                                        if data.current.EstimatedCostToDate
                                            tr.important
                                                th 
                                                    span.current #{currencyFormat.format(data.current.EstimatedCostToDate)}
                                                td
                                                    | Est. Cost
                                                    if !data.isNew && 'EstimatedCostToDate' in data.diff && data.last.EstimatedCostToDate
                                                        span.previous
                                                            if data.current.EstimatedCostToDate > data.last.EstimatedCostToDate
                                                                span.deltaUp ▲
                                                            else
                                                                span.deltaDown ▼
                                                            | from #{currencyFormat.format(data.last.EstimatedCostToDate)}

                            tr
                                td.details(colspan=2)
                                    div.detailsRow
                                        if data.cities && (data.cities.closest || data.cities.biggest)
                                            if data.cities.closest
                                                span.detail #{data.cities.closest.directions}
                                                br
                                            if data.cities.biggest
                                                span.detail #{data.cities.biggest.directions}
                                                br
                                        if data.current.FireCause
                                            span.detail #{data.current.FireCause} Cause
                                        if data.current.FireDiscoveryDateTime
                                            span.detail Discovered #{friendlyDate(data.current.FireDiscoveryDateTime)}
                                        if !data.isNew && data.last.ModifiedOnDateTime && data.current.ModifiedOnDateTime != data.last.ModifiedOnDateTime
                                            br
                                            span.detail Prev. Updated #{friendlyDate(data.last.ModifiedOnDateTime)}
                                        if data.current.PerimDateTime
                                            br
                                            span.detail Perimeter Updated #{friendlyDate(data.current.PerimDateTime)}
                                        br
                                        span.detail Event Id #{data.current.UniqueFireIdentifier}

            div.cite
                b
                    | Unofficial. Not affiliated with or endorsed by any government agencies.
                    br
                    | To the maximum extent permitted by law: (1) all content is provided to you on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER (INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDNTIONS OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR NONINFRINGEMENT); and (2) IN NO EVENT WILL ANY AUTHOR OR DATA PROVIDER BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES arising out of your use of this content, even if the author or data provider has been advised of the possibility of such losses, costs, expenses, or damages.
                p
                    | Sources:&#x0020;
                    if (data.last && data.last.Source === 'CALFIRE') || data.current.Source === 'CALFIRE'
                        | CAL FIRE;&#x0020;
                    if (data.last && data.last.Source === 'NFSA') || data.current.Source === 'NFSA'
                        | NWCG/NFSA (#{config.sourceUrl});&#x0020;
                    if (data.last && data.last.Source === 'GEOMAC') || data.current.Source === 'GEOMAC'
                        | USGS GeoMAC (wildfire.cr.usgs.gov);&#x0020;
                    | USGS Gap Analysis Program (GAP), PADUS;
                    | USGS The National Map (NBD, 3DEP, GNIS, NHD, NLCD, NSD, NTD);
                    | USGS Global Ecosystems;
                    | Natural Earth Data;
                    | U.S. State Dept Humanitarian Information Unit;
                    | NOAA NCEI, U.S. Coastal Relief Model;
                    | U.S. Census Bureau — TIGER/Line;
                    | U.S. Forest Service. Source data may be modified or combined with other data.
                    | *Containment may represent objective completion rather than perimeter containment.
                p
                    | Generated by twitter.com/@#{config.twitterName} using #{config.systemName}.
                    | No claim to original government works.
                    | EPSG:3857.
                p
                    | #{data.uniqueUpdateId}

            canvas#qrcode
        script
            | showMap(#{data.lon}, #{data.lat}, #{data.zoom}, 'update', !{JSON.stringify(mapData)});
